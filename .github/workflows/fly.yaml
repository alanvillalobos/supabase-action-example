name: Fly Preview

on:
  pull_request:

jobs:
  preview:
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      FLY_ORGANIZATION_ID: D307G6NwgR0z2u4vPG23jYy8a3cg3xbYR
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl m api-proxy -o personal &
      - id: deployment
        uses: sweatybridge/fly-preview@main
        env:
          DB_ONLY: true
      - run: |
          body='[Deploying...](https://fly.io/apps/${{ github.head_ref }})'
          exit_code=0
          gh issue comment ${{ github.event.number }} --edit-last -b "$body" || exit_code=$?
          if [[ "$exit_code" -gt 0 ]]; then
            gh issue comment ${{ github.event.number }} -b "$body"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          for i in {1..60}; do
            status=$(flyctl m list -a ${{ github.head_ref }} --json | jq -r 'map(.checks)[0][0].status')
            if [ "$status" == 'passing' ]; then
              break
            fi
            echo "project not ready: $status"
            sleep 2
          done
      - run: |
          body='[Preview](https://${{ steps.deployment.outputs.hostname }}) | [Console](https://fly.io/apps/${{ github.head_ref }})'
          gh issue comment ${{ github.event.number }} --edit-last -b "$body"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: |
          supabase db push --db-url 'postgres://postgres:postgres@${{ steps.deployment.outputs.hostname }}/postgres'
